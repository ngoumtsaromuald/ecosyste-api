{
  "name": "backend-api-core-romapi",
  "version": "1.0.0",
  "description": "Backend API Core for ROMAPI ecosystem",
  "main": "dist/main.js",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",

    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:reset": "prisma migrate reset",
    "prisma:seed": "ts-node prisma/seed.ts",
    "prisma:studio": "prisma studio",
    "db:setup": "ts-node scripts/setup-database.ts",
    "db:test": "ts-node scripts/test-db-connection.ts",
    "db:verify": "ts-node scripts/verify-database.ts",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "swagger:test": "ts-node scripts/test-swagger.ts",
    "swagger:generate": "ts-node scripts/test-swagger.ts && echo 'OpenAPI spec generated at dist/openapi.json'",
    "types:generate": "ts-node scripts/generate-types.ts",
    "types:watch": "nodemon --watch src --ext ts --exec \"npm run types:generate\"",
    "types:test": "ts-node scripts/test-type-generation.ts",
    "build:types": "npm run types:generate && npm run build",
    "deploy:prod": "bash scripts/deploy.sh production",
    "deploy:auth:prod": "bash scripts/deploy-auth-prod.sh production",
    "deploy:staging": "bash scripts/deploy.sh staging",
    "migrate:prod": "node scripts/migrate-prod.js",
    "migrate:auth:prod": "node scripts/migrate-auth-prod.js",
    "migrate:status": "node scripts/migrate-prod.js status",
    "migrate:rollback": "node scripts/migrate-prod.js rollback",
    "validate:auth:prod": "node scripts/validate-auth-prod.js",
    "seed:prod": "node scripts/seed-prod.js",
    "seed:categories": "node scripts/seed-prod.js categories",
    "seed:admin": "node scripts/seed-prod.js admin",
    "docker:prod:up": "docker-compose -f docker-compose.prod.yml up -d --build",
    "docker:prod:down": "docker-compose -f docker-compose.prod.yml down",
    "docker:prod:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "search:setup": "ts-node scripts/setup-search-infrastructure.ts setup",
    "search:reset": "ts-node scripts/setup-search-infrastructure.ts reset",
    "search:health": "ts-node scripts/setup-search-infrastructure.ts health",
    "search:verify": "ts-node scripts/setup-search-infrastructure.ts verify",
    "search:validate": "ts-node scripts/validate-search-config.ts",
    "search:test": "ts-node scripts/test-search-infrastructure.ts",
    "es:setup": "ts-node scripts/setup-elasticsearch.ts setup",
    "es:reset": "ts-node scripts/setup-elasticsearch.ts reset",
    "es:health": "ts-node scripts/setup-elasticsearch.ts health",
    "redis:setup": "ts-node scripts/setup-redis.ts setup",
    "redis:health": "ts-node scripts/setup-redis.ts health",
    "redis:flush": "ts-node scripts/setup-redis.ts flush",
    "indices:init": "ts-node scripts/manage-elasticsearch-indices.ts init",
    "indices:health": "ts-node scripts/manage-elasticsearch-indices.ts health",
    "indices:test": "ts-node scripts/manage-elasticsearch-indices.ts test",
    "indices:cluster": "ts-node scripts/manage-elasticsearch-indices.ts cluster",
    "indices:reindex": "ts-node scripts/manage-search-indices.ts reindex",
    "indices:status": "ts-node scripts/manage-search-indices.ts status",
    "indices:clear": "ts-node scripts/manage-search-indices.ts clear",
    "indices:recreate": "ts-node scripts/manage-search-indices.ts recreate",
    "indices:connection": "ts-node scripts/manage-search-indices.ts connection",
    "indices:queue-stats": "ts-node scripts/manage-search-indices.ts queue-stats",
    "mappings:test": "ts-node scripts/test-elasticsearch-mappings.ts",
    "search:cli": "ts-node scripts/search-cli.ts",
    "search:cleanup": "ts-node scripts/search-analytics-cleanup.ts",
    "search:backup": "ts-node scripts/search-backup-restore.ts backup",
    "search:restore": "ts-node scripts/search-backup-restore.ts restore",
    "search:monitor": "ts-node scripts/search-health-monitor.ts",
    "search:monitor:check": "ts-node scripts/search-health-monitor.ts check",
    "deploy:search:prod": "bash scripts/deploy-search.sh production",
    "deploy:search:staging": "bash scripts/deploy-search.sh staging",
    "search:test": "ts-node scripts/test-search-cli.ts",
    "search:validate": "ts-node scripts/validate-search-setup.ts",
    "search:compile-check": "ts-node scripts/compile-check.ts",
    "search:final-check": "bash scripts/final-check.sh"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.19.0",
    "@nestjs/bull": "^10.2.1",
    "@nestjs/common": "^10.4.4",
    "@nestjs/config": "3.2.3",
    "@nestjs/core": "^10.4.4",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^10.4.4",
    "@nestjs/swagger": "7.4.2",
    "@nestjs/throttler": "5.2.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.1",
    "@opentelemetry/exporter-jaeger": "^2.0.1",
    "@opentelemetry/exporter-prometheus": "^0.203.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-metrics": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@opentelemetry/sdk-trace-node": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@prisma/client": "5.20.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/nodemailer": "^7.0.0",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "axios": "^1.11.0",
    "bcrypt": "5.1.1",
    "bull": "^4.12.9",
    "class-transformer": "0.5.1",
    "class-validator": "0.14.1",
    "commander": "^12.1.0",
    "ioredis": "^5.4.1",
    "jsonwebtoken": "^9.0.2",
    "nest-winston": "^1.10.2",
    "nodemailer": "^7.0.5",
    "passport": "^0.7.0",
    "passport-custom": "^1.1.1",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^5.8.1",
    "reflect-metadata": "0.2.2",
    "rxjs": "7.8.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-elasticsearch": "^0.19.0"
  },
  "devDependencies": {
    "@nestjs/cli": "10.4.5",
    "@nestjs/schematics": "10.1.4",
    "@nestjs/testing": "10.4.4",
    "@types/bcrypt": "5.0.2",
    "@types/express": "4.17.21",
    "@types/jest": "29.5.13",
    "@types/node": "20.16.10",
    "@types/supertest": "6.0.2",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "6.21.0",
    "@typescript-eslint/parser": "6.21.0",
    "eslint": "8.57.1",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-prettier": "5.2.1",
    "jest": "29.7.0",
    "nodemon": "^3.1.10",
    "openapi-typescript": "^7.9.1",
    "prettier": "3.3.3",
    "prisma": "5.20.0",
    "source-map-support": "0.5.21",
    "supertest": "6.3.4",
    "ts-jest": "29.2.5",
    "ts-loader": "9.5.1",
    "ts-node": "10.9.2",
    "tsconfig-paths": "4.1.2",
    "typescript": "5.6.2"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
